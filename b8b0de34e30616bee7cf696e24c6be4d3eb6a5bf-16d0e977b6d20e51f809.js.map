{"version":3,"file":"b8b0de34e30616bee7cf696e24c6be4d3eb6a5bf-16d0e977b6d20e51f809.js","mappings":"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","sources":["webpack://i-netday.com/./src/components/mainvisual.tsx","webpack://i-netday.com/./node_modules/@mui/material/Grid/GridContext.js","webpack://i-netday.com/./node_modules/@mui/material/Grid/gridClasses.js","webpack://i-netday.com/./node_modules/@mui/material/Grid/Grid.js"],"sourcesContent":["import * as React from 'react';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport { menuHeight } from './layout';\nimport { useStaticQuery, graphql } from 'gatsby';\n\ninterface IMainvisualImages {\n  pc: string;\n  sp: string;\n}\n\ninterface IMainvisual {\n  isLoaded: boolean;\n  images: IMainvisualImages[];\n  messages: React.ReactNode[];\n}\n\nconst showingTime: number = 3000;\nconst duration: number = 1000;\n\nconst sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\nexport const Mainvisual = ({ isLoaded, images, messages }: IMainvisual) => {\n  const [currentImageIndex, setCurrentImageIndex] = React.useState<number>(0);\n  const [isShow, setIsShow] = React.useState<boolean>(false);\n  const [isSp, setIsSp] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    const onResize = () => {\n      setIsSp(\n        document.documentElement.clientWidth <\n          document.documentElement.clientHeight\n      );\n    };\n\n    onResize();\n    window.addEventListener('load', onResize);\n    window.addEventListener('resize', onResize);\n\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, []);\n\n  React.useEffect(() => {\n    const f = async () => {\n      setIsShow(true);\n      await sleep(duration);\n      await sleep(showingTime);\n      setIsShow(false);\n      await sleep(duration);\n      setCurrentImageIndex(i => (i + 1) % images.length);\n    };\n\n    let timer: NodeJS.Timeout;\n\n    if (images.length > 1) {\n      timer = setInterval(f, duration + showingTime + duration);\n      f();\n    } else {\n      setIsShow(true);\n    }\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  const data = useStaticQuery(graphql`\n    query {\n      allFile {\n        nodes {\n          relativePath\n          childImageSharp {\n            gatsbyImageData(width: 1920, layout: FIXED)\n          }\n        }\n      }\n    }\n  `);\n\n  const imageSharpPc = data.allFile.nodes.find(\n    ({ relativePath }: { relativePath: string }) =>\n      relativePath === images[currentImageIndex].pc\n  );\n\n  const imageSharpSp = data.allFile.nodes.find(\n    ({ relativePath }: { relativePath: string }) =>\n      relativePath === images[currentImageIndex].sp\n  );\n\n  if (!imageSharpPc || !getImage(imageSharpPc)) return <></>;\n  const imageDataPc: any = getImage(imageSharpPc);\n\n  if (!imageSharpSp || !getImage(imageSharpSp)) return <></>;\n  const imageDataSp: any = getImage(imageSharpSp);\n\n  return (\n    <Box\n      sx={{\n        position: 'relative',\n        marginTop: `${menuHeight * -1}px`,\n        transition: 'height 250ms ease-out',\n        height: '100vh',\n        borderRadius: '5dvw',\n        overflow: 'hidden'\n        // @TODO\n        // eslint-disable-next-line no-dupe-keys\n        // height: '100dvh'\n      }}\n    >\n      <Box\n        sx={{\n          position: 'absolute',\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          zIndex: 9\n        }}\n      >\n        <Box\n          sx={{\n            position: 'absolute',\n            width: '100dvw',\n            height: '100dvh',\n            overflow: 'hidden',\n            backgroundColor: 'white'\n          }}\n        >\n          <Box\n            sx={{\n              position: 'absolute',\n              width: '100%',\n              height: '100%',\n              // backgroundColor: 'rgba(0,0,0,0.25)',\n              zIndex: 99\n            }}\n          />\n          <GatsbyImage\n            image={isSp ? imageDataSp : imageDataPc}\n            alt='main'\n            objectPosition='50% 0%'\n            style={{\n              width: '100%',\n              height: '100%',\n              opacity: isShow ? 1 : 0,\n              transition: `all ${duration}ms ease-out`\n            }}\n          />\n        </Box>\n        <Container>\n          <Box\n            sx={{\n              display: 'flex',\n              height: '100dvh',\n              justifyContent: 'flex-end',\n              mb: 10,\n              alignItems: 'flex-start',\n              flexDirection: 'column'\n              /*\n              mb: {\n                md: 28,\n                sm: 20,\n                xs: 20\n              }\n              */\n            }}\n          >\n            {messages?.map((label, i) => {\n              const duration = 1000;\n              const delay = i * 500 + 1000;\n\n              return (\n                <Box\n                  key={i}\n                  sx={{\n                    zIndex: 999,\n                    transition: [\n                      `opacity ${duration}ms ease-out ${delay}ms`,\n                      `transform ${duration}ms ease-out ${delay}ms`\n                    ].join(','),\n                    opacity: isLoaded ? 1 : 0,\n                    transform: `translateY(${isLoaded ? 0 : 100}px)`\n                  }}\n                >\n                  <Typography\n                    // color='primary'\n                    color='white'\n                    sx={{\n                      display: 'block',\n                      fontSize: {\n                        lg: 80,\n                        md: 60,\n                        sm: 40,\n                        xs: 28\n                      },\n                      //background: 'linear-gradient(to right, rgba(255,255,255,0.0), rgba(255,255,255,0.8))',\n                      // textShadow: '1px 1px 4px #555',\n                      textShadow: '1px 1px 4px #e8827a',\n                      fontWeight: 300,\n                      letterSpacing: '0.1em',\n                      lineHeight: 1.5\n                      // bgcolor: 'background.default',\n                      // bgcolor: 'rgba(255,255,255,0.8)',\n                    }}\n                  >\n                    {label}\n                  </Typography>\n                </Box>\n              );\n            })}\n          </Box>\n        </Container>\n      </Box>\n    </Box>\n  );\n};\n","'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst GridContext = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  GridContext.displayName = 'GridContext';\n}\nexport default GridContext;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getGridUtilityClass(slot) {\n  return generateUtilityClass('MuiGrid', slot);\n}\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];\nconst WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst gridClasses = generateUtilityClasses('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth',\n// spacings\n...SPACINGS.map(spacing => `spacing-xs-${spacing}`),\n// direction values\n...DIRECTIONS.map(direction => `direction-xs-${direction}`),\n// wrap values\n...WRAPS.map(wrap => `wrap-xs-${wrap}`),\n// grid sizes for all breakpoints\n...GRID_SIZES.map(size => `grid-xs-${size}`), ...GRID_SIZES.map(size => `grid-sm-${size}`), ...GRID_SIZES.map(size => `grid-md-${size}`), ...GRID_SIZES.map(size => `grid-lg-${size}`), ...GRID_SIZES.map(size => `grid-xl-${size}`)]);\nexport default gridClasses;","'use client';\n\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { extendSxProp } from '@mui/system/styleFunctionSx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport requirePropFactory from \"../utils/requirePropFactory.js\";\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport useTheme from \"../styles/useTheme.js\";\nimport GridContext from \"./GridContext.js\";\nimport gridClasses, { getGridUtilityClass } from \"./gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function generateGrid({\n  theme,\n  ownerState\n}) {\n  let size;\n  return theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n    // Use side effect over immutability for better performance.\n    let styles = {};\n    if (ownerState[breakpoint]) {\n      size = ownerState[breakpoint];\n    }\n    if (!size) {\n      return globalStyles;\n    }\n    if (size === true) {\n      // For the auto layouting\n      styles = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    } else if (size === 'auto') {\n      styles = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    } else {\n      const columnsBreakpointValues = resolveBreakpointValues({\n        values: ownerState.columns,\n        breakpoints: theme.breakpoints.values\n      });\n      const columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues;\n      if (columnValue === undefined || columnValue === null) {\n        return globalStyles;\n      }\n      // Keep 7 significant numbers.\n      const width = `${Math.round(size / columnValue * 10e7) / 10e5}%`;\n      let more = {};\n      if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n        const themeSpacing = theme.spacing(ownerState.columnSpacing);\n        if (themeSpacing !== '0px') {\n          const fullWidth = `calc(${width} + ${themeSpacing})`;\n          more = {\n            flexBasis: fullWidth,\n            maxWidth: fullWidth\n          };\n        }\n      }\n\n      // Close to the bootstrap implementation:\n      // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n      styles = {\n        flexBasis: width,\n        flexGrow: 0,\n        maxWidth: width,\n        ...more\n      };\n    }\n\n    // No need for a media query for the first size.\n    if (theme.breakpoints.values[breakpoint] === 0) {\n      Object.assign(globalStyles, styles);\n    } else {\n      globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n    }\n    return globalStyles;\n  }, {});\n}\nexport function generateDirection({\n  theme,\n  ownerState\n}) {\n  const directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme\n  }, directionValues, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n    if (propValue.startsWith('column')) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n    return output;\n  });\n}\n\n/**\n * Extracts zero value breakpoint keys before a non-zero value breakpoint key.\n * @example { xs: 0, sm: 0, md: 2, lg: 0, xl: 0 } or [0, 0, 2, 0, 0]\n * @returns [xs, sm]\n */\nfunction extractZeroValueBreakpointKeys({\n  breakpoints,\n  values\n}) {\n  let nonZeroKey = '';\n  Object.keys(values).forEach(key => {\n    if (nonZeroKey !== '') {\n      return;\n    }\n    if (values[key] !== 0) {\n      nonZeroKey = key;\n    }\n  });\n  const sortedBreakpointKeysByValue = Object.keys(breakpoints).sort((a, b) => {\n    return breakpoints[a] - breakpoints[b];\n  });\n  return sortedBreakpointKeysByValue.slice(0, sortedBreakpointKeysByValue.indexOf(nonZeroKey));\n}\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && rowSpacing !== 0) {\n    const rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof rowSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: rowSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacingValues, (propValue, breakpoint) => {\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: `-${themeSpacing}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: themeSpacing\n          }\n        };\n      }\n      if (zeroValueBreakpointKeys?.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        marginTop: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingTop: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && columnSpacing !== 0) {\n    const columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof columnSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: columnSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacingValues, (propValue, breakpoint) => {\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        const negativeValue = `-${themeSpacing}`;\n        return {\n          width: `calc(100% + ${themeSpacing})`,\n          marginLeft: negativeValue,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: themeSpacing\n          }\n        };\n      }\n      if (zeroValueBreakpointKeys?.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        width: '100%',\n        marginLeft: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingLeft: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function resolveSpacingStyles(spacing, breakpoints, styles = {}) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [styles[`spacing-xs-${String(spacing)}`]];\n  }\n  // in case of object `spacing`\n  const spacingStyles = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      spacingStyles.push(styles[`spacing-${breakpoint}-${String(value)}`]);\n    }\n  });\n  return spacingStyles;\n}\n\n// Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      container,\n      direction,\n      item,\n      spacing,\n      wrap,\n      zeroMinWidth,\n      breakpoints\n    } = ownerState;\n    let spacingStyles = [];\n\n    // in case of grid item\n    if (container) {\n      spacingStyles = resolveSpacingStyles(spacing, breakpoints, styles);\n    }\n    const breakpointsStyles = [];\n    breakpoints.forEach(breakpoint => {\n      const value = ownerState[breakpoint];\n      if (value) {\n        breakpointsStyles.push(styles[`grid-${breakpoint}-${String(value)}`]);\n      }\n    });\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, ...spacingStyles, direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], ...breakpointsStyles];\n  }\n})(\n// FIXME(romgrk): Can't use memoTheme here\n({\n  ownerState\n}) => ({\n  boxSizing: 'border-box',\n  ...(ownerState.container && {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%'\n  }),\n  ...(ownerState.item && {\n    margin: 0 // For instance, it's useful when used with a `figure` element.\n  }),\n  ...(ownerState.zeroMinWidth && {\n    minWidth: 0\n  }),\n  ...(ownerState.wrap !== 'wrap' && {\n    flexWrap: ownerState.wrap\n  })\n}), generateDirection, generateRowGap, generateColumnGap, generateGrid);\nexport function resolveSpacingClasses(spacing, breakpoints) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [`spacing-xs-${String(spacing)}`];\n  }\n  // in case of object `spacing`\n  const classes = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      const className = `spacing-${breakpoint}-${String(value)}`;\n      classes.push(className);\n    }\n  });\n  return classes;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    spacing,\n    wrap,\n    zeroMinWidth,\n    breakpoints\n  } = ownerState;\n  let spacingClasses = [];\n\n  // in case of grid item\n  if (container) {\n    spacingClasses = resolveSpacingClasses(spacing, breakpoints);\n  }\n  const breakpointsClasses = [];\n  breakpoints.forEach(breakpoint => {\n    const value = ownerState[breakpoint];\n    if (value) {\n      breakpointsClasses.push(`grid-${breakpoint}-${String(value)}`);\n    }\n  });\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', ...spacingClasses, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, ...breakpointsClasses]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\n/**\n * @deprecated Use the [`Grid2`](https://mui.com/material-ui/react-grid2/) component instead.\n */\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useDefaultProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const {\n    breakpoints\n  } = useTheme();\n  const props = extendSxProp(themeProps);\n  const {\n    className,\n    columns: columnsProp,\n    columnSpacing: columnSpacingProp,\n    component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    rowSpacing: rowSpacingProp,\n    spacing = 0,\n    wrap = 'wrap',\n    zeroMinWidth = false,\n    ...other\n  } = props;\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columnsContext = React.useContext(GridContext);\n\n  // columns set with default breakpoint unit of 12\n  const columns = container ? columnsProp || 12 : columnsContext;\n  const breakpointsValues = {};\n  const otherFiltered = {\n    ...other\n  };\n  breakpoints.keys.forEach(breakpoint => {\n    if (other[breakpoint] != null) {\n      breakpointsValues[breakpoint] = other[breakpoint];\n      delete otherFiltered[breakpoint];\n    }\n  });\n  const ownerState = {\n    ...props,\n    columns,\n    container,\n    direction,\n    item,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    zeroMinWidth,\n    spacing,\n    ...breakpointsValues,\n    breakpoints: breakpoints.keys\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: /*#__PURE__*/_jsx(GridRoot, {\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref,\n      ...otherFiltered\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid);\n  // eslint-disable-next-line no-useless-concat\n  Grid['propTypes' + ''] = {\n    // eslint-disable-next-line react/forbid-foreign-prop-types\n    ...Grid.propTypes,\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  };\n}\nexport default Grid;"],"names":["duration","sleep","ms","Promise","resolve","setTimeout","Mainvisual","_ref","isLoaded","images","messages","currentImageIndex","setCurrentImageIndex","React","isShow","setIsShow","isSp","setIsSp","onResize","document","documentElement","clientWidth","clientHeight","window","addEventListener","removeEventListener","f","async","i","length","timer","setInterval","clearTimeout","data","useStaticQuery","imageSharpPc","allFile","nodes","find","_ref2","relativePath","pc","imageSharpSp","_ref3","sp","getImage","___EmotionJSX","imageDataPc","imageDataSp","Box","sx","position","marginTop","menuHeight","transition","height","borderRadius","overflow","width","display","justifyContent","alignItems","zIndex","backgroundColor","GatsbyImage","image","alt","objectPosition","style","opacity","Container","mb","flexDirection","map","label","delay","key","join","transform","Typography","color","fontSize","lg","md","sm","xs","textShadow","fontWeight","letterSpacing","lineHeight","getGridUtilityClass","slot","generateUtilityClass","GRID_SIZES","generateUtilityClasses","spacing","direction","wrap","size","extractZeroValueBreakpointKeys","breakpoints","values","nonZeroKey","Object","keys","forEach","sortedBreakpointKeysByValue","sort","a","b","slice","indexOf","GridRoot","styled","name","overridesResolver","props","styles","ownerState","container","item","zeroMinWidth","spacingStyles","Number","isNaN","String","breakpoint","value","push","resolveSpacingStyles","breakpointsStyles","root","boxSizing","flexWrap","margin","minWidth","theme","directionValues","propValue","output","startsWith","maxWidth","rowSpacing","rowSpacingValues","zeroValueBreakpointKeys","themeSpacing","paddingTop","includes","columnSpacing","columnSpacingValues","marginLeft","paddingLeft","reduce","globalStyles","flexBasis","flexGrow","flexShrink","columnsBreakpointValues","columns","columnValue","Math","round","more","fullWidth","assign","up","useUtilityClasses","classes","spacingClasses","className","resolveSpacingClasses","breakpointsClasses","slots","composeClasses","Grid","inProps","ref","themeProps","useTheme","extendSxProp","columnsProp","columnSpacingProp","component","rowSpacingProp","other","columnsContext","breakpointsValues","otherFiltered","Provider","children","clsx","as"],"sourceRoot":""}