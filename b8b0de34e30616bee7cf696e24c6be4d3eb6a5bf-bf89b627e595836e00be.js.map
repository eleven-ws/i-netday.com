{"version":3,"file":"b8b0de34e30616bee7cf696e24c6be4d3eb6a5bf-bf89b627e595836e00be.js","mappings":"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","sources":["webpack://i-netday.com/./src/components/mainvisual.tsx","webpack://i-netday.com/./node_modules/@mui/material/Grid/GridContext.js","webpack://i-netday.com/./node_modules/@mui/material/Grid/gridClasses.js","webpack://i-netday.com/./node_modules/@mui/material/Grid/Grid.js"],"sourcesContent":["import * as React from 'react';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport { menuHeight } from './layout';\nimport { useStaticQuery, graphql } from 'gatsby';\n\ninterface IMainvisual {\n  isLoaded: boolean;\n  images: string[];\n  messages: React.ReactNode[];\n}\n\nconst showingTime: number = 3000;\nconst duration: number = 1000;\n\nconst sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\nexport const Mainvisual = ({ isLoaded, images, messages }: IMainvisual) => {\n  const [currentImageIndex, setCurrentImageIndex] = React.useState<number>(0);\n  const [isShow, setIsShow] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    const f = async () => {\n      setIsShow(true);\n      await sleep(duration);\n      await sleep(showingTime);\n      setIsShow(false);\n      await sleep(duration);\n      setCurrentImageIndex(i => (i + 1) % images.length);\n    };\n\n    let timer: NodeJS.Timeout;\n\n    if (images.length > 1) {\n      timer = setInterval(f, duration + showingTime + duration);\n      f();\n    } else {\n      setIsShow(true);\n    }\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  const data = useStaticQuery(graphql`\n    query {\n      allFile {\n        nodes {\n          relativePath\n          childImageSharp {\n            gatsbyImageData(width: 1920, layout: FIXED)\n          }\n        }\n      }\n    }\n  `);\n\n  const imageSharp = data.allFile.nodes.find(\n    ({ relativePath }: { relativePath: string }) =>\n      relativePath === images[currentImageIndex]\n  );\n\n  if (!imageSharp || !getImage(imageSharp)) return <></>;\n  const imageData: any = getImage(imageSharp);\n\n  return (\n    <Box\n      sx={{\n        position: 'relative',\n        marginTop: `${menuHeight * -1}px`,\n        transition: 'height 250ms ease-out',\n        height: '100vh',\n        borderRadius: '5dvw',\n        overflow: 'hidden'\n        // @TODO\n        // eslint-disable-next-line no-dupe-keys\n        // height: '100dvh'\n      }}\n    >\n      <Box\n        sx={{\n          position: 'absolute',\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          zIndex: 9\n        }}\n      >\n        <Box\n          sx={{\n            position: 'absolute',\n            width: '100dvw',\n            height: '100dvh',\n            overflow: 'hidden',\n            backgroundColor: 'white'\n          }}\n        >\n          <Box\n            sx={{\n              position: 'absolute',\n              width: '100%',\n              height: '100%',\n              // backgroundColor: 'rgba(0,0,0,0.25)',\n              zIndex: 99\n            }}\n          />\n          <GatsbyImage\n            image={imageData}\n            alt='main'\n            objectPosition='65% 50%'\n            style={{\n              width: '100%',\n              height: '100%',\n              opacity: isShow ? 1 : 0,\n              transition: `all ${duration}ms ease-out`\n            }}\n          />\n        </Box>\n        <Container>\n          <Box\n            sx={{\n              display: 'flex',\n              height: '100dvh',\n              justifyContent: 'flex-end',\n              mb: 10,\n              alignItems: 'flex-start',\n              flexDirection: 'column'\n              /*\n              mb: {\n                md: 28,\n                sm: 20,\n                xs: 20\n              }\n              */\n            }}\n          >\n            {messages?.map((label, i) => {\n              const duration = 1000;\n              const delay = i * 500 + 1000;\n\n              return (\n                <Box\n                  key={i}\n                  sx={{\n                    zIndex: 999,\n                    transition: [\n                      `opacity ${duration}ms ease-out ${delay}ms`,\n                      `transform ${duration}ms ease-out ${delay}ms`\n                    ].join(','),\n                    opacity: isLoaded ? 1 : 0,\n                    transform: `translateY(${isLoaded ? 0 : 100}px)`\n                  }}\n                >\n                  <Typography\n                    // color='primary'\n                    color='white'\n                    sx={{\n                      display: 'block',\n                      fontSize: {\n                        lg: 80,\n                        md: 60,\n                        sm: 40,\n                        xs: 28\n                      },\n                      //background: 'linear-gradient(to right, rgba(255,255,255,0.0), rgba(255,255,255,0.8))',\n                      // textShadow: '1px 1px 4px #555',\n                      textShadow: '1px 1px 4px #e8827a',\n                      fontWeight: 300,\n                      letterSpacing: '0.1em',\n                      lineHeight: 1.5\n                      // bgcolor: 'background.default',\n                      // bgcolor: 'rgba(255,255,255,0.8)',\n                    }}\n                  >\n                    {label}\n                  </Typography>\n                </Box>\n              );\n            })}\n          </Box>\n        </Container>\n      </Box>\n    </Box>\n  );\n};\n","'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst GridContext = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  GridContext.displayName = 'GridContext';\n}\nexport default GridContext;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getGridUtilityClass(slot) {\n  return generateUtilityClass('MuiGrid', slot);\n}\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];\nconst WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst gridClasses = generateUtilityClasses('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth',\n// spacings\n...SPACINGS.map(spacing => `spacing-xs-${spacing}`),\n// direction values\n...DIRECTIONS.map(direction => `direction-xs-${direction}`),\n// wrap values\n...WRAPS.map(wrap => `wrap-xs-${wrap}`),\n// grid sizes for all breakpoints\n...GRID_SIZES.map(size => `grid-xs-${size}`), ...GRID_SIZES.map(size => `grid-sm-${size}`), ...GRID_SIZES.map(size => `grid-md-${size}`), ...GRID_SIZES.map(size => `grid-lg-${size}`), ...GRID_SIZES.map(size => `grid-xl-${size}`)]);\nexport default gridClasses;","'use client';\n\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"rowSpacing\", \"spacing\", \"wrap\", \"zeroMinWidth\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { extendSxProp } from '@mui/system/styleFunctionSx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\nexport function generateGrid({\n  theme,\n  ownerState\n}) {\n  let size;\n  return theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n    // Use side effect over immutability for better performance.\n    let styles = {};\n    if (ownerState[breakpoint]) {\n      size = ownerState[breakpoint];\n    }\n    if (!size) {\n      return globalStyles;\n    }\n    if (size === true) {\n      // For the auto layouting\n      styles = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    } else if (size === 'auto') {\n      styles = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    } else {\n      const columnsBreakpointValues = resolveBreakpointValues({\n        values: ownerState.columns,\n        breakpoints: theme.breakpoints.values\n      });\n      const columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues;\n      if (columnValue === undefined || columnValue === null) {\n        return globalStyles;\n      }\n      // Keep 7 significant numbers.\n      const width = `${Math.round(size / columnValue * 10e7) / 10e5}%`;\n      let more = {};\n      if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n        const themeSpacing = theme.spacing(ownerState.columnSpacing);\n        if (themeSpacing !== '0px') {\n          const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n          more = {\n            flexBasis: fullWidth,\n            maxWidth: fullWidth\n          };\n        }\n      }\n\n      // Close to the bootstrap implementation:\n      // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n      styles = _extends({\n        flexBasis: width,\n        flexGrow: 0,\n        maxWidth: width\n      }, more);\n    }\n\n    // No need for a media query for the first size.\n    if (theme.breakpoints.values[breakpoint] === 0) {\n      Object.assign(globalStyles, styles);\n    } else {\n      globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n    }\n    return globalStyles;\n  }, {});\n}\nexport function generateDirection({\n  theme,\n  ownerState\n}) {\n  const directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme\n  }, directionValues, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n    if (propValue.indexOf('column') === 0) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n    return output;\n  });\n}\n\n/**\n * Extracts zero value breakpoint keys before a non-zero value breakpoint key.\n * @example { xs: 0, sm: 0, md: 2, lg: 0, xl: 0 } or [0, 0, 2, 0, 0]\n * @returns [xs, sm]\n */\nfunction extractZeroValueBreakpointKeys({\n  breakpoints,\n  values\n}) {\n  let nonZeroKey = '';\n  Object.keys(values).forEach(key => {\n    if (nonZeroKey !== '') {\n      return;\n    }\n    if (values[key] !== 0) {\n      nonZeroKey = key;\n    }\n  });\n  const sortedBreakpointKeysByValue = Object.keys(breakpoints).sort((a, b) => {\n    return breakpoints[a] - breakpoints[b];\n  });\n  return sortedBreakpointKeysByValue.slice(0, sortedBreakpointKeysByValue.indexOf(nonZeroKey));\n}\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && rowSpacing !== 0) {\n    const rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof rowSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: rowSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacingValues, (propValue, breakpoint) => {\n      var _zeroValueBreakpointK;\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: getOffset(themeSpacing)\n          }\n        };\n      }\n      if ((_zeroValueBreakpointK = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        marginTop: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingTop: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && columnSpacing !== 0) {\n    const columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof columnSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: columnSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacingValues, (propValue, breakpoint) => {\n      var _zeroValueBreakpointK2;\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          width: `calc(100% + ${getOffset(themeSpacing)})`,\n          marginLeft: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: getOffset(themeSpacing)\n          }\n        };\n      }\n      if ((_zeroValueBreakpointK2 = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK2.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        width: '100%',\n        marginLeft: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingLeft: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function resolveSpacingStyles(spacing, breakpoints, styles = {}) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [styles[`spacing-xs-${String(spacing)}`]];\n  }\n  // in case of object `spacing`\n  const spacingStyles = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      spacingStyles.push(styles[`spacing-${breakpoint}-${String(value)}`]);\n    }\n  });\n  return spacingStyles;\n}\n\n// Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      container,\n      direction,\n      item,\n      spacing,\n      wrap,\n      zeroMinWidth,\n      breakpoints\n    } = ownerState;\n    let spacingStyles = [];\n\n    // in case of grid item\n    if (container) {\n      spacingStyles = resolveSpacingStyles(spacing, breakpoints, styles);\n    }\n    const breakpointsStyles = [];\n    breakpoints.forEach(breakpoint => {\n      const value = ownerState[breakpoint];\n      if (value) {\n        breakpointsStyles.push(styles[`grid-${breakpoint}-${String(value)}`]);\n      }\n    });\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, ...spacingStyles, direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], ...breakpointsStyles];\n  }\n})(({\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box'\n}, ownerState.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, ownerState.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n}, ownerState.zeroMinWidth && {\n  minWidth: 0\n}, ownerState.wrap !== 'wrap' && {\n  flexWrap: ownerState.wrap\n}), generateDirection, generateRowGap, generateColumnGap, generateGrid);\nexport function resolveSpacingClasses(spacing, breakpoints) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [`spacing-xs-${String(spacing)}`];\n  }\n  // in case of object `spacing`\n  const classes = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      const className = `spacing-${breakpoint}-${String(value)}`;\n      classes.push(className);\n    }\n  });\n  return classes;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    spacing,\n    wrap,\n    zeroMinWidth,\n    breakpoints\n  } = ownerState;\n  let spacingClasses = [];\n\n  // in case of grid item\n  if (container) {\n    spacingClasses = resolveSpacingClasses(spacing, breakpoints);\n  }\n  const breakpointsClasses = [];\n  breakpoints.forEach(breakpoint => {\n    const value = ownerState[breakpoint];\n    if (value) {\n      breakpointsClasses.push(`grid-${breakpoint}-${String(value)}`);\n    }\n  });\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', ...spacingClasses, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, ...breakpointsClasses]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const {\n    breakpoints\n  } = useTheme();\n  const props = extendSxProp(themeProps);\n  const {\n      className,\n      columns: columnsProp,\n      columnSpacing: columnSpacingProp,\n      component = 'div',\n      container = false,\n      direction = 'row',\n      item = false,\n      rowSpacing: rowSpacingProp,\n      spacing = 0,\n      wrap = 'wrap',\n      zeroMinWidth = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columnsContext = React.useContext(GridContext);\n\n  // columns set with default breakpoint unit of 12\n  const columns = container ? columnsProp || 12 : columnsContext;\n  const breakpointsValues = {};\n  const otherFiltered = _extends({}, other);\n  breakpoints.keys.forEach(breakpoint => {\n    if (other[breakpoint] != null) {\n      breakpointsValues[breakpoint] = other[breakpoint];\n      delete otherFiltered[breakpoint];\n    }\n  });\n  const ownerState = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    zeroMinWidth,\n    spacing\n  }, breakpointsValues, {\n    breakpoints: breakpoints.keys\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: /*#__PURE__*/_jsx(GridRoot, _extends({\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref\n    }, otherFiltered))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid);\n  // eslint-disable-next-line no-useless-concat\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\nexport default Grid;"],"names":["duration","sleep","ms","Promise","resolve","setTimeout","Mainvisual","_ref","isLoaded","images","messages","currentImageIndex","setCurrentImageIndex","React","isShow","setIsShow","f","async","i","length","timer","setInterval","clearTimeout","imageSharp","useStaticQuery","allFile","nodes","find","_ref2","relativePath","getImage","___EmotionJSX","imageData","Box","sx","position","marginTop","menuHeight","transition","height","borderRadius","overflow","width","display","justifyContent","alignItems","zIndex","backgroundColor","GatsbyImage","image","alt","objectPosition","style","opacity","Container","mb","flexDirection","map","label","delay","key","join","transform","Typography","color","fontSize","lg","md","sm","xs","textShadow","fontWeight","letterSpacing","lineHeight","getGridUtilityClass","slot","generateUtilityClass","GRID_SIZES","generateUtilityClasses","spacing","direction","wrap","size","_excluded","getOffset","val","parse","parseFloat","String","replace","extractZeroValueBreakpointKeys","breakpoints","values","nonZeroKey","Object","keys","forEach","sortedBreakpointKeysByValue","sort","a","b","slice","indexOf","GridRoot","styled","name","overridesResolver","props","styles","ownerState","container","item","zeroMinWidth","spacingStyles","Number","isNaN","breakpoint","value","push","resolveSpacingStyles","breakpointsStyles","root","boxSizing","flexWrap","margin","minWidth","theme","directionValues","propValue","output","maxWidth","rowSpacing","rowSpacingValues","zeroValueBreakpointKeys","_zeroValueBreakpointK","themeSpacing","paddingTop","includes","columnSpacing","columnSpacingValues","_zeroValueBreakpointK2","marginLeft","paddingLeft","reduce","globalStyles","flexBasis","flexGrow","flexShrink","columnsBreakpointValues","columns","columnValue","Math","round","more","fullWidth","assign","up","useUtilityClasses","classes","spacingClasses","className","resolveSpacingClasses","breakpointsClasses","slots","composeClasses","Grid","inProps","ref","themeProps","useThemeProps","useTheme","extendSxProp","columnsProp","columnSpacingProp","component","rowSpacingProp","other","columnsContext","breakpointsValues","otherFiltered","Provider","children","clsx","as"],"sourceRoot":""}