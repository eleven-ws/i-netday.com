{"version":3,"file":"b8b0de34e30616bee7cf696e24c6be4d3eb6a5bf-f7cbf2bc638b596537ef.js","mappings":"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","sources":["webpack://i-netday.com/./node_modules/@mui/material/Grid/GridContext.js","webpack://i-netday.com/./node_modules/@mui/material/Grid/gridClasses.js","webpack://i-netday.com/./node_modules/@mui/material/Grid/Grid.js","webpack://i-netday.com/./src/components/mainvisual.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst GridContext = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  GridContext.displayName = 'GridContext';\n}\nexport default GridContext;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getGridUtilityClass(slot) {\n  return generateUtilityClass('MuiGrid', slot);\n}\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];\nconst WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst gridClasses = generateUtilityClasses('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth',\n// spacings\n...SPACINGS.map(spacing => `spacing-xs-${spacing}`),\n// direction values\n...DIRECTIONS.map(direction => `direction-xs-${direction}`),\n// wrap values\n...WRAPS.map(wrap => `wrap-xs-${wrap}`),\n// grid sizes for all breakpoints\n...GRID_SIZES.map(size => `grid-xs-${size}`), ...GRID_SIZES.map(size => `grid-sm-${size}`), ...GRID_SIZES.map(size => `grid-md-${size}`), ...GRID_SIZES.map(size => `grid-lg-${size}`), ...GRID_SIZES.map(size => `grid-xl-${size}`)]);\nexport default gridClasses;","'use client';\n\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { extendSxProp } from '@mui/system/styleFunctionSx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport requirePropFactory from \"../utils/requirePropFactory.js\";\nimport styled from \"../styles/styled.js\";\nimport useThemeProps from \"../styles/useThemeProps.js\";\nimport useTheme from \"../styles/useTheme.js\";\nimport GridContext from \"./GridContext.js\";\nimport gridClasses, { getGridUtilityClass } from \"./gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function generateGrid({\n  theme,\n  ownerState\n}) {\n  let size;\n  return theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n    // Use side effect over immutability for better performance.\n    let styles = {};\n    if (ownerState[breakpoint]) {\n      size = ownerState[breakpoint];\n    }\n    if (!size) {\n      return globalStyles;\n    }\n    if (size === true) {\n      // For the auto layouting\n      styles = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    } else if (size === 'auto') {\n      styles = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    } else {\n      const columnsBreakpointValues = resolveBreakpointValues({\n        values: ownerState.columns,\n        breakpoints: theme.breakpoints.values\n      });\n      const columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues;\n      if (columnValue === undefined || columnValue === null) {\n        return globalStyles;\n      }\n      // Keep 7 significant numbers.\n      const width = `${Math.round(size / columnValue * 10e7) / 10e5}%`;\n      let more = {};\n      if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n        const themeSpacing = theme.spacing(ownerState.columnSpacing);\n        if (themeSpacing !== '0px') {\n          const fullWidth = `calc(${width} + ${themeSpacing})`;\n          more = {\n            flexBasis: fullWidth,\n            maxWidth: fullWidth\n          };\n        }\n      }\n\n      // Close to the bootstrap implementation:\n      // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n      styles = {\n        flexBasis: width,\n        flexGrow: 0,\n        maxWidth: width,\n        ...more\n      };\n    }\n\n    // No need for a media query for the first size.\n    if (theme.breakpoints.values[breakpoint] === 0) {\n      Object.assign(globalStyles, styles);\n    } else {\n      globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n    }\n    return globalStyles;\n  }, {});\n}\nexport function generateDirection({\n  theme,\n  ownerState\n}) {\n  const directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme\n  }, directionValues, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n    if (propValue.startsWith('column')) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n    return output;\n  });\n}\n\n/**\n * Extracts zero value breakpoint keys before a non-zero value breakpoint key.\n * @example { xs: 0, sm: 0, md: 2, lg: 0, xl: 0 } or [0, 0, 2, 0, 0]\n * @returns [xs, sm]\n */\nfunction extractZeroValueBreakpointKeys({\n  breakpoints,\n  values\n}) {\n  let nonZeroKey = '';\n  Object.keys(values).forEach(key => {\n    if (nonZeroKey !== '') {\n      return;\n    }\n    if (values[key] !== 0) {\n      nonZeroKey = key;\n    }\n  });\n  const sortedBreakpointKeysByValue = Object.keys(breakpoints).sort((a, b) => {\n    return breakpoints[a] - breakpoints[b];\n  });\n  return sortedBreakpointKeysByValue.slice(0, sortedBreakpointKeysByValue.indexOf(nonZeroKey));\n}\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && rowSpacing !== 0) {\n    const rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof rowSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: rowSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacingValues, (propValue, breakpoint) => {\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: theme.spacing(-propValue),\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: themeSpacing\n          }\n        };\n      }\n      if (zeroValueBreakpointKeys?.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        marginTop: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingTop: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && columnSpacing !== 0) {\n    const columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof columnSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: columnSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacingValues, (propValue, breakpoint) => {\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        const negativeValue = theme.spacing(-propValue);\n        return {\n          width: `calc(100% + ${themeSpacing})`,\n          marginLeft: negativeValue,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: themeSpacing\n          }\n        };\n      }\n      if (zeroValueBreakpointKeys?.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        width: '100%',\n        marginLeft: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingLeft: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function resolveSpacingStyles(spacing, breakpoints, styles = {}) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [styles[`spacing-xs-${String(spacing)}`]];\n  }\n  // in case of object `spacing`\n  const spacingStyles = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      spacingStyles.push(styles[`spacing-${breakpoint}-${String(value)}`]);\n    }\n  });\n  return spacingStyles;\n}\n\n// Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      container,\n      direction,\n      item,\n      spacing,\n      wrap,\n      zeroMinWidth,\n      breakpoints\n    } = ownerState;\n    let spacingStyles = [];\n\n    // in case of grid item\n    if (container) {\n      spacingStyles = resolveSpacingStyles(spacing, breakpoints, styles);\n    }\n    const breakpointsStyles = [];\n    breakpoints.forEach(breakpoint => {\n      const value = ownerState[breakpoint];\n      if (value) {\n        breakpointsStyles.push(styles[`grid-${breakpoint}-${String(value)}`]);\n      }\n    });\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, ...spacingStyles, direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], ...breakpointsStyles];\n  }\n})(\n// FIXME(romgrk): Can't use memoTheme here\n({\n  ownerState\n}) => ({\n  boxSizing: 'border-box',\n  ...(ownerState.container && {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%'\n  }),\n  ...(ownerState.item && {\n    margin: 0 // For instance, it's useful when used with a `figure` element.\n  }),\n  ...(ownerState.zeroMinWidth && {\n    minWidth: 0\n  }),\n  ...(ownerState.wrap !== 'wrap' && {\n    flexWrap: ownerState.wrap\n  })\n}), generateDirection, generateRowGap, generateColumnGap, generateGrid);\nexport function resolveSpacingClasses(spacing, breakpoints) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [`spacing-xs-${String(spacing)}`];\n  }\n  // in case of object `spacing`\n  const classes = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      const className = `spacing-${breakpoint}-${String(value)}`;\n      classes.push(className);\n    }\n  });\n  return classes;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    spacing,\n    wrap,\n    zeroMinWidth,\n    breakpoints\n  } = ownerState;\n  let spacingClasses = [];\n\n  // in case of grid item\n  if (container) {\n    spacingClasses = resolveSpacingClasses(spacing, breakpoints);\n  }\n  const breakpointsClasses = [];\n  breakpoints.forEach(breakpoint => {\n    const value = ownerState[breakpoint];\n    if (value) {\n      breakpointsClasses.push(`grid-${breakpoint}-${String(value)}`);\n    }\n  });\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', ...spacingClasses, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, ...breakpointsClasses]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\n/**\n * @deprecated Use the [`Grid2`](https://mui.com/material-ui/react-grid2/) component instead.\n */\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const {\n    breakpoints\n  } = useTheme();\n  const props = extendSxProp(themeProps);\n  const {\n    className,\n    columns: columnsProp,\n    columnSpacing: columnSpacingProp,\n    component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    rowSpacing: rowSpacingProp,\n    spacing = 0,\n    wrap = 'wrap',\n    zeroMinWidth = false,\n    ...other\n  } = props;\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columnsContext = React.useContext(GridContext);\n\n  // columns set with default breakpoint unit of 12\n  const columns = container ? columnsProp || 12 : columnsContext;\n  const breakpointsValues = {};\n  const otherFiltered = {\n    ...other\n  };\n  breakpoints.keys.forEach(breakpoint => {\n    if (other[breakpoint] != null) {\n      breakpointsValues[breakpoint] = other[breakpoint];\n      delete otherFiltered[breakpoint];\n    }\n  });\n  const ownerState = {\n    ...props,\n    columns,\n    container,\n    direction,\n    item,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    zeroMinWidth,\n    spacing,\n    ...breakpointsValues,\n    breakpoints: breakpoints.keys\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: /*#__PURE__*/_jsx(GridRoot, {\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref,\n      ...otherFiltered\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   * @deprecated Use `flexWrap` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid);\n  // eslint-disable-next-line no-useless-concat\n  Grid['propTypes' + ''] = {\n    // eslint-disable-next-line react/forbid-foreign-prop-types\n    ...Grid.propTypes,\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  };\n}\nexport default Grid;","import * as React from 'react';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport { menuHeight } from './layout';\nimport { useStaticQuery, graphql } from 'gatsby';\n\ninterface IMainvisualImages {\n  pc: string;\n  sp: string;\n}\n\ninterface IMainvisual {\n  isLoaded: boolean;\n  images: IMainvisualImages[];\n  messages: React.ReactNode[];\n}\n\nconst showingTime: number = 3000;\nconst duration: number = 1000;\n\nconst sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\nexport const Mainvisual = ({ isLoaded, images, messages }: IMainvisual) => {\n  const [currentImageIndex, setCurrentImageIndex] = React.useState<number>(0);\n  const [isShow, setIsShow] = React.useState<boolean>(false);\n  const [isSp, setIsSp] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    const onResize = () => {\n      setIsSp(\n        document.documentElement.clientWidth <\n          document.documentElement.clientHeight\n      );\n    };\n\n    onResize();\n    window.addEventListener('load', onResize);\n    window.addEventListener('resize', onResize);\n\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, []);\n\n  React.useEffect(() => {\n    const f = async () => {\n      setIsShow(true);\n      await sleep(duration);\n      await sleep(showingTime);\n      setIsShow(false);\n      await sleep(duration);\n      setCurrentImageIndex(i => (i + 1) % images.length);\n    };\n\n    let timer: NodeJS.Timeout;\n\n    if (images.length > 1) {\n      timer = setInterval(f, duration + showingTime + duration);\n      f();\n    } else {\n      setIsShow(true);\n    }\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  const data = useStaticQuery(graphql`\n    query {\n      allFile {\n        nodes {\n          relativePath\n          childImageSharp {\n            gatsbyImageData(width: 1920, layout: FIXED)\n          }\n        }\n      }\n    }\n  `);\n\n  const imageSharpPc = data.allFile.nodes.find(\n    ({ relativePath }: { relativePath: string }) =>\n      relativePath === images[currentImageIndex].pc\n  );\n\n  const imageSharpSp = data.allFile.nodes.find(\n    ({ relativePath }: { relativePath: string }) =>\n      relativePath === images[currentImageIndex].sp\n  );\n\n  if (!imageSharpPc || !getImage(imageSharpPc)) return <></>;\n  const imageDataPc: any = getImage(imageSharpPc);\n\n  if (!imageSharpSp || !getImage(imageSharpSp)) return <></>;\n  const imageDataSp: any = getImage(imageSharpSp);\n\n  return (\n    <Box\n      sx={{\n        position: 'relative',\n        marginTop: `${menuHeight * -1}px`,\n        transition: 'height 250ms ease-out',\n        height: '100vh',\n        borderRadius: '5dvw',\n        overflow: 'hidden'\n        // @TODO\n        // eslint-disable-next-line no-dupe-keys\n        // height: '100dvh'\n      }}\n    >\n      <Box\n        sx={{\n          position: 'absolute',\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          zIndex: 9\n        }}\n      >\n        <Box\n          sx={{\n            position: 'absolute',\n            width: '100dvw',\n            height: '100dvh',\n            overflow: 'hidden',\n            backgroundColor: 'white'\n          }}\n        >\n          <Box\n            sx={{\n              position: 'absolute',\n              width: '100%',\n              height: '100%',\n              // backgroundColor: 'rgba(0,0,0,0.25)',\n              zIndex: 99\n            }}\n          />\n          <GatsbyImage\n            image={isSp ? imageDataSp : imageDataPc}\n            alt='main'\n            objectPosition='50% 0%'\n            style={{\n              width: '100%',\n              height: '100%',\n              opacity: isShow ? 1 : 0,\n              transition: `all ${duration}ms ease-out`\n            }}\n          />\n        </Box>\n        <Container>\n          <Box\n            sx={{\n              display: 'flex',\n              height: '100dvh',\n              justifyContent: 'flex-end',\n              mb: 10,\n              alignItems: 'flex-start',\n              flexDirection: 'column'\n              /*\n              mb: {\n                md: 28,\n                sm: 20,\n                xs: 20\n              }\n              */\n            }}\n          >\n            {messages?.map((label, i) => {\n              const duration = 1000;\n              const delay = i * 500 + 1000;\n\n              return (\n                <Box\n                  key={i}\n                  sx={{\n                    zIndex: 999,\n                    transition: [\n                      `opacity ${duration}ms ease-out ${delay}ms`,\n                      `transform ${duration}ms ease-out ${delay}ms`\n                    ].join(','),\n                    opacity: isLoaded ? 1 : 0,\n                    transform: `translateY(${isLoaded ? 0 : 100}px)`\n                  }}\n                >\n                  <Typography\n                    // color='primary'\n                    color='white'\n                    sx={{\n                      display: 'block',\n                      fontSize: {\n                        lg: 80,\n                        md: 60,\n                        sm: 40,\n                        xs: 28\n                      },\n                      //background: 'linear-gradient(to right, rgba(255,255,255,0.0), rgba(255,255,255,0.8))',\n                      // textShadow: '1px 1px 4px #555',\n                      textShadow: '1px 1px 4px #e8827a',\n                      fontWeight: 300,\n                      letterSpacing: '0.1em',\n                      lineHeight: 1.5\n                      // bgcolor: 'background.default',\n                      // bgcolor: 'rgba(255,255,255,0.8)',\n                    }}\n                  >\n                    {label}\n                  </Typography>\n                </Box>\n              );\n            })}\n          </Box>\n        </Container>\n      </Box>\n    </Box>\n  );\n};\n"],"names":["getGridUtilityClass","slot","generateUtilityClass","GRID_SIZES","generateUtilityClasses","map","spacing","direction","wrap","size","extractZeroValueBreakpointKeys","breakpoints","values","nonZeroKey","Object","keys","forEach","key","sortedBreakpointKeysByValue","sort","a","b","slice","indexOf","GridRoot","styled","name","overridesResolver","props","styles","ownerState","container","item","zeroMinWidth","spacingStyles","Number","isNaN","String","breakpoint","value","push","resolveSpacingStyles","breakpointsStyles","root","boxSizing","display","flexWrap","width","margin","minWidth","theme","directionValues","propValue","output","flexDirection","startsWith","maxWidth","rowSpacing","rowSpacingValues","zeroValueBreakpointKeys","themeSpacing","marginTop","paddingTop","includes","columnSpacing","columnSpacingValues","marginLeft","paddingLeft","reduce","globalStyles","flexBasis","flexGrow","flexShrink","columnsBreakpointValues","columns","columnValue","Math","round","more","fullWidth","assign","up","useUtilityClasses","classes","spacingClasses","className","resolveSpacingClasses","breakpointsClasses","slots","composeClasses","Grid","inProps","ref","themeProps","useThemeProps","useTheme","extendSxProp","columnsProp","columnSpacingProp","component","rowSpacingProp","other","columnsContext","breakpointsValues","otherFiltered","Provider","children","clsx","as","duration","sleep","ms","Promise","resolve","setTimeout","Mainvisual","_ref","isLoaded","images","messages","currentImageIndex","setCurrentImageIndex","React","isShow","setIsShow","isSp","setIsSp","onResize","document","documentElement","clientWidth","clientHeight","window","addEventListener","removeEventListener","f","async","i","length","timer","setInterval","clearTimeout","data","useStaticQuery","imageSharpPc","allFile","nodes","find","_ref2","relativePath","pc","imageSharpSp","_ref3","sp","getImage","___EmotionJSX","imageDataPc","imageDataSp","Box","sx","position","menuHeight","transition","height","borderRadius","overflow","justifyContent","alignItems","zIndex","backgroundColor","GatsbyImage","image","alt","objectPosition","style","opacity","Container","mb","label","delay","join","transform","Typography","color","fontSize","lg","md","sm","xs","textShadow","fontWeight","letterSpacing","lineHeight"],"sourceRoot":""}